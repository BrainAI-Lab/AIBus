먼저 기존의 AICar의 도로를 추적해 주행하는 방식을 설명하겠습니다.
먼저 자동차에 달려있는 IP카메라를 통해 자동차의 전방 영상을 받아옵니다.

이 영상에서 프레임별로 분리하여 이미지별로 처리합니다.
도로만 효율적으로 처리하기 위해 아래 1/3 정도만 남기고 잘라냅니다.
이미지를 그레이 스케일로 변환하고 명도가 일정 이하로 낮을 부분을 찾아냅니다.
이 부분이 가운데를 기준으로 어느쪽에 많은지를 인식해 
자동차를 좌 우로 제어합니다.

하지만 이 방식은 주위 조도에 따라 제대로 작동되지 않는 경우가 많다는 단점이 있습니다.

도로를 인공지능을 사용하여 판단한다면 이 문제를 해결할 수 있을 것입니다.

openvino에서 제공하는 자동자가 볼 수 있는 이미지에서의 요소들을 분류해주는 road-segmentation-adas-0001 모델을 사용하여 구현하였습니다.
이모델은 입력된 이미지에서 각 픽셀들이 배경, 도로, 커브길, 마크일 확률을 4개의 리스트로 반환해줍니다.
 
각각의 리스트는 896x512 크기의 2차원 배열에 0에서 1사이 실수의 확률로 이루어져 있으며
저희는 이 반환된 리스트를 쉽게 분석하기 위하여 0~1의 값을 0~255의 범위로 변환하고 이 리스트를 흑백 이미지로 변환하였습니다.

이 이미지를 threshold 함수를 사용하여 200을 기준으로 이진화하는 것으로 데이터를 가공하였습니다.

이것은 이미지일 뿐 컴퓨터는 이것을 선으로 인식하지 못하기 때문에 HoughLinesP 함수를 사용하여 직선의 확률이 높은 선을 추출합니다.
하지만 이 함수는 한 이미지에서 선처럼 보이는 것들은 모두 추출해내기 때문에 하나의 선도 2~30개의 짧은 선들로 인식합니다.

그래서 이 선들의 좌표의 평균값을 계산해 실제 차선과 매우 유사한 좌표를 찾아냅니다.

